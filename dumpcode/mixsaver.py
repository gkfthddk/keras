import os
import sys
import subprocess
import numpy as np
from getiter import *
from datetime import datetime
import random
ptmin=0
ptmax=0
now=datetime.now()
for pt in [100,200,500,1000]:
  ls=subprocess.check_output("ls Data/*j*_{}_*.root".format(pt),shell=True)
  jname='Data/jj_pt_{}_{}.npz'.format(pt,int(pt*1.1))
  zname='Data/zj_pt_{}_{}.npz'.format(pt,int(pt*1.1))
  ls=ls.split("\n")[:-1]
  if(pt==100):
    ptmin=0.815
    ptmax=1.159
  if(pt==200):
    ptmin=0.819
    ptmax=1.123
  if(pt==500):
    ptmin=0.821
    ptmax=1.093
  if(pt==1000):
    ptmin=0.8235
    ptmax=1.076

  tqdata="Data/zj_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  tgdata="Data/jj_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  #tqdata="Data/qq_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  #tgdata="Data/gg_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  train=wkiter([tqdata,tgdata],batch_size=128,end=1,istrain=1,rc="rc",etabin=1,pt=pt,ptmin=ptmin,ptmax=ptmax,unscale=0)
  zjset=train.qjetset
  zjrnnset=train.qrnnset
  zpt=train.qptset
  zeta=train.qetaset
  zptd=train.qptdset
  zchadmult=train.qchadmultset
  znhadmult=train.qnhadmultset
  zelectronmult=train.qelectronmultset
  zmuonmult=train.qmuonmultset
  zphotonmult=train.qphotonmultset
  zcmult=train.qcmultset
  znmult=train.qnmultset
  zmajoraxis=train.qmajorset
  zminoraxis=train.qminorset
  jjset=train.gjetset
  jjrnnset=train.grnnset
  jpt=train.gptset
  jeta=train.getaset
  jptd=train.gptdset
  jchadmult=train.gchadmultset
  jnhadmult=train.gnhadmultset
  jelectronmult=train.gelectronmultset
  jmuonmult=train.gmuonmultset
  jphotonmult=train.gphotonmultset
  jcmult=train.gcmultset
  jnmult=train.gnmultset
  jmajoraxis=train.gmajorset
  jminoraxis=train.gminorset
  if(len(zpt)>len(jpt)):length=len(jpt)
  else:length=len(zpt)
  ji=0
  zi=0
  ptset=[]
  etaset=[]
  bdtset=[]
  cnnset=[]
  rnnset=[]
  label=[]
  for i in xrange(length*2):
    button=random.random()
    if(ji==length):button=1
    elif(zi==length):button=0
    if(button<0.5):
      ptset.append(jpt[ji])
      etaset.append(jeta[ji])
      bdtset.append([jcmult[ji],jnmult[ji],jptd[ji],jmajoraxis[ji],jminoraxis[ji],jchadmult[ji],jnhadmult[ji],jelectronmult[ji],jmuonmult[ji],jphotonmult[ji]])
      cnnset.append(jjset[ji])
      rnnset.append(jjrnnset[ji])
      label.append([0,1])
      ji+=1
    else:
      ptset.append(zpt[zi])
      etaset.append(zeta[zi])
      bdtset.append([zcmult[zi],znmult[zi],zptd[zi],zmajoraxis[zi],zminoraxis[zi],zchadmult[zi],znhadmult[zi],zelectronmult[zi],zmuonmult[zi],zphotonmult[zi]])
      cnnset.append(zjset[zi])
      rnnset.append(zjrnnset[zi])
      label.append([1,0])
      zi+=1
  bdtset=np.array(bdtset)
  cnnset=np.array(cnnset)
  rnnset=np.array(rnnset)
  np.savez_compressed("newjjmixed{}pteta".format(pt),ptset=ptset,etaset=etaset,bdtset=bdtset,cnnset=cnnset,rnnset=rnnset,label=label)
  print(len(ptset))
  del train
  #tqdata="Data/zq_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  #tgdata="Data/zg_pt_{0}_{1}.root".format(pt,int(pt*1.1))
  train=wkiter([tqdata,tgdata],batch_size=128,end=1,istrain=1,rc="rc",etabin=2.4,pt=pt,ptmin=ptmin,ptmax=ptmax,unscale=0)
  zjset=train.qjetset
  zjrnnset=train.qrnnset
  zpt=train.qptset
  zeta=train.qetaset
  zptd=train.qptdset
  zchadmult=train.qchadmultset
  znhadmult=train.qnhadmultset
  zelectronmult=train.qelectronmultset
  zmuonmult=train.qmuonmultset
  zphotonmult=train.qphotonmultset
  zcmult=train.qcmultset
  znmult=train.qnmultset
  zmajoraxis=train.qmajorset
  zminoraxis=train.qminorset
  jjset=train.gjetset
  jjrnnset=train.grnnset
  jpt=train.gptset
  jeta=train.getaset
  jptd=train.gptdset
  jchadmult=train.gchadmultset
  jnhadmult=train.gnhadmultset
  jelectronmult=train.gelectronmultset
  jmuonmult=train.gmuonmultset
  jphotonmult=train.gphotonmultset
  jcmult=train.gcmultset
  jnmult=train.gnmultset
  jmajoraxis=train.gmajorset
  jminoraxis=train.gminorset
  if(len(zpt)>len(jpt)):length=len(jpt)
  else:length=len(zpt)
  ji=0
  zi=0
  ptset=[]
  etaset=[]
  bdtset=[]
  cnnset=[]
  rnnset=[]
  label=[]
  for i in xrange(length*2):
    button=random.random()
    if(ji==length):button=1
    elif(zi==length):button=0
    if(button<0.5):
      ptset.append(jpt[ji])
      etaset.append(jeta[ji])
      bdtset.append([jcmult[ji],jnmult[ji],jptd[ji],jmajoraxis[ji],jminoraxis[ji],jchadmult[ji],jnhadmult[ji],jelectronmult[ji],jmuonmult[ji],jphotonmult[ji]])
      cnnset.append(jjset[ji])
      rnnset.append(jjrnnset[ji])
      label.append([0,1])
      ji+=1
    else:
      ptset.append(zpt[zi])
      etaset.append(zeta[zi])
      bdtset.append([zcmult[zi],znmult[zi],zptd[zi],zmajoraxis[zi],zminoraxis[zi],zchadmult[zi],znhadmult[zi],zelectronmult[zi],zmuonmult[zi],zphotonmult[zi]])
      cnnset.append(zjset[zi])
      rnnset.append(zjrnnset[zi])
      label.append([1,0])
      zi+=1
  bdtset=np.array(bdtset)
  cnnset=np.array(cnnset)
  rnnset=np.array(rnnset)
  np.savez_compressed("newzjmixed{}pt".format(pt),ptset=ptset,etaset=etaset,bdtset=bdtset,cnnset=cnnset,rnnset=rnnset,label=label)
  print(len(ptset))
